name: dotnet package

on:
  pull_request:
    types: [closed]
    branches:
      - master
  # push:
  # # pull_request:
  #   # Sequence of patterns matched against refs/heads
  #   branches:    
  #     - master
  #     # - 'releases/**'

jobs:
  build:

    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     dotnet-version: ['3.0', '3.1.x', '5.0.x' ]

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        # with:
        #   dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

        # ./bin/<configuration>/<framework>/
        # ./bin/Release/net6.0
        # ./bin/Debug/net6.0

      - name: Print working directory
        run: pwd

      # - name: man zip
      #   run: man zip

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Zip output
        run: zip release ./bin/Release/net6.0

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false


      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/release.zip
          asset_name: release.zip
          asset_content_type: application/zip